<?xml version="1.0" encoding="UTF-8"?>
<!-- This is to config namespace to use for Spring config file. This will help us put up intellisense when we define bean -->
<!-- Spring create this namespace that act like a dictionary of properties that we can use to create beans -->
<!-- This file is created in the resources folder. Maven will compile this file and put in under the class folder. -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- bean definitions here -->
    <bean name="speakerRepository" class="org.example.repository.HibernateSpeakerRepositoryImpl" />

<!--    <bean name="speakerService" class="org.example.services.SpeakerServiceImpl" autowire="constructor"> &lt;!&ndash; It uses constructor with an argument that set the field repository (line 15) to autowired. Because there is a bean with type speakerRepository and there is a constructor that receive an object with speakerRepository type as a parameter inside the class that this tag referenced to (SpeakerServiceImpl).  &ndash;&gt;-->
<!--    <bean name="speakerService" class="org.example.services.SpeakerServiceImpl" autowire="byType"> &lt;!&ndash; It uses setter (line 24) to autowired. Because there is a bean with type speakerRepository and there is a setter method that receive an object with speakerRepository type as a parameter inside the class that this tag referenced to (SpeakerServiceImpl). &ndash;&gt;-->
    <bean name="speakerService" class="org.example.services.SpeakerServiceImpl" autowire="byName"> <!-- It uses setter (line 24) to autowired. Because we have a bean name speakerRepository and inside speakerService that this tag refers to contain a setter name setSpeakerRepository that we have a bean of that name, it's call the setter method and passes the bean of the same name as setter's name (cut set part). Therefore, auto wiring -->

<!--        <constructor-arg index="0" ref="speakerRepository" /> -->

    </bean>

</beans>